generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Bill {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  @@map("bills")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique(map: "sessionToken_1")
  userId       String   @db.ObjectId
  expires      DateTime @db.Date
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Subscription {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  @@map("subscriptions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique(map: "email_1")
  emailVerified DateTime? @db.Date
  image         String?
  accounts      Account[]
  Session       Session[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
